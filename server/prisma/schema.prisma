// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// server/prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  email     String   @unique
  password  String
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  posts Post[]
  likes Like[]

  @@map("users")
}

model Post {
  id          String   @id @default(cuid())
  caption     String
  imageUrl    String
  imagePublicId String
  location    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  likes      Like[]
  shares     Share[]
  likesCount Int     @default(0)
  sharesCount Int    @default(0)

  @@map("posts")
}

model Like {
  id     String @id @default(cuid())
  userId String
  postId String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@unique([userId, postId])
  @@map("likes")
}

model Share {
  id        String   @id @default(cuid())
  postId    String
  sharedAt  DateTime @default(now())
  ipAddress String?

  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@map("shares")
}